(()=>{"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e,t){if(t.length<e)throw new TypeError(e+" argument"+(e>1?"s":"")+" required, but only "+t.length+" present")}document.querySelector(".currentTempContainer").addEventListener("click",(()=>{const e=document.querySelector(".forecast");e.className="forecast";const t=document.createElement("div");t.className="forecastInfo";const n=document.createElement("div");n.className="forecastDetails";const o=document.createElement("div");n.className="fcDetailsImg";const r=document.createElement("div");r.className="fcTimes";const c=document.createElement("div");c.className="fcTime";const a=document.createElement("div");a.className="fcTemp";const s=document.createElement("span");s.className="fcTempInfo";const u=document.createElement("span");u.className="highlight",e.append(t),t.append(n),n.append(o,r),r.append(c,a),a.append(s,u)}));const n=async(n,o)=>{const r="214203c486864879e59c9aa802929646";try{const c=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${n}&appid=${r}&units=${o}`),i=await c.json();(async(e,t,n,o)=>{const r=await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${e}&lon=${t}&appid=${n}&units=${o}`),c=await r.json();console.log(c)})(i.coord.lat,i.coord.lon,r,o),(n=>{console.log(n);const o=a(n.dt,n.timezone),r=(document.querySelector(".today"),document.querySelector(".month")),c=document.querySelector(".currentTemp"),i=(document.querySelector(".highlight"),document.querySelector(".realTemp")),m=document.querySelector(".weatherImg"),d=document.querySelector(".conditions"),p=document.querySelector(".location");let y=o.getMinutes(),f=o.getHours();y=s(y),f=s(f),function(n){t(1,arguments),function(n){t(1,arguments);var o=Object.prototype.toString.call(n);n instanceof Date||"object"===e(n)&&"[object Date]"===o?new Date(n.getTime()):"number"==typeof n||"[object Number]"===o?new Date(n):("string"!=typeof n&&"[object String]"!==o||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}(1e3*function(e){if(null===e||!0===e||!1===e)return NaN;var t=Number(e);return isNaN(t)?t:t<0?Math.ceil(t):Math.floor(t)}(n))}(n.dt),console.log(o),r.textContent=`\n    ${l(o.getDay())} \n    ${o.getDate()}\n    ${u(o.getMonth())}  ${f}:${y}`,c.textContent=Math.round(n.main.temp),i.textContent=`Feels like ${Math.round(n.main.feels_like)}`;const{weather:h}=n,[{icon:g}]=h;m.src=`https://openweathermap.org/img/wn/${g}.png`,d.textContent=n.weather[0].description,p.textContent=n.name})(i)}catch(e){console.log(e),(()=>{const e=document.querySelector("header"),t=document.createElement("div");t.className="error",t.textContent="Location not found! Please search a city through 'city', 'city, state', 'city, country'.",e.appendChild(t)})()}};let o="celsius",r=null;const c=e=>{const t=document.querySelector(".currentTempContainer");null!==r&&t.removeEventListener("click",r),r=(e=>{const t="imperial";let r=!1;return()=>{o===t?(o="metric",n(e,o)):(o=r?"metric":t,r=!r,n(e,o))}})(e),t.addEventListener("click",r)},a=((()=>{const e=document.querySelector("form");let t;e.addEventListener("submit",(r=>{r.preventDefault();const a=new FormData(e);t=a.get("city"),n(t,o),c(t),(()=>{const e=document.querySelector("header"),t=document.querySelector(".error");e.childElementCount>1&&e.removeChild(t)})(),e.reset()}))})(),(e,t)=>{const n=parseInt(e,10)+parseInt(t,10)+25200,o=new Date(1e3*n).toUTCString();return new Date(o)}),s=e=>(e<=10&&(e="0"+e.toString()),e),u=e=>["January","February","March","April","May","June","July","August","September","October","November","December"][e],l=e=>["Sun","Mon","Tues","Wed","Thur","Fri","Sat"][e];n("Vancouver","metric"),c("Vancouver")})();